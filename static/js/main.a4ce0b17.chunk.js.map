{"version":3,"sources":["p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","SuperButton","red","className","disabled","restProps","finalClassName","s","default","Header","style","marginLeft","to","Message","props","src","avatar","name","message","time","messageData","HW1","Affair","affair","priority","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","display","flexDirection","alignItems","textAlign","margin","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","finalSpanClassName","finalInputClassName","errorInput","superInput","e","currentTarget","value","key","Greeting","setNameCallback","addUser","totalUsers","inputClass","filled","placeholder","errorMsg","btn","GreetingContainer","users","addUserCallback","setName","setError","length","alert","HW3","setUsers","updatedUsers","v1","console","log","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","testSpanError","blue","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","undefined","PreJunior","Error404","PATH","Routes","path","exact","render","Junior","JuniorPlus","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.a4ce0b17.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Greeting_btn__3kp0R\",\"error\":\"Greeting_error__1mawF\",\"filled\":\"Greeting_filled__fN3is\",\"errorMsg\":\"Greeting_errorMsg__3pTjh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3uy9_\",\"red\":\"SuperButton_red__2pT7w\",\"disabled\":\"SuperButton_disabled__2Y7LP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__1BDfs\",\"errorInput\":\"SuperInputText_errorInput__1nD96\",\"error\":\"SuperInputText_error__35Z6E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__ocY1o\",\"column\":\"HW4_column__Mvmm7\",\"testSpanError\":\"HW4_testSpanError__fcn7K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__1lfgR\",\"spanClassName\":\"SuperCheckbox_spanClassName__2b__O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__15s9T\"};","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className, disabled,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${disabled ? s.disabled : red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React from 'react'\nimport {NavLink} from \"react-router-dom\";\nimport './Header.css';\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\n\nfunction Header() {\n    return (\n        <div className={'dropdown-menu'}>\n            <SuperButton className={'dropbtn'} style={{marginLeft: '10px'}}>Menu</SuperButton>\n            <div className={'dropdown-content'}>\n                <div className={'nav'}><NavLink to={\"/pre-junior\"}>Pre Junior</NavLink></div>\n                <div className={'nav'}><NavLink to={\"/junior\"}>Junior</NavLink></div>\n                <div className={'nav'}><NavLink to={\"/junior-plus\"}>Junior+</NavLink></div>\n            </div>\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport './Message.css';\n\ntype MessagePropsType = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\nfunction Message(props: MessagePropsType) {\n    return (\n        <div className={\"Message\"}>\n            <div className={\"message-avatar\"}><img src={props.avatar}/></div>\n            <div className={\"message-container\"}>\n                <div className={\"message-username\"}>{props.name}</div>\n                <div className={\"message-text\"}>{props.message}</div>\n                <div className={\"message-time\"}>{props.time}</div>\n            </div>\n        </div>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport Message from \"./Message\";\n\nexport const messageData = {\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    name: 'Some Name',\n    message: 'some text',\n    time: '22:00',\n}\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            --- homework 1\n            {/*should work (должно работать)*/}\n\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW1\n","import React from 'react'\nimport {AffairType} from \"./HW2\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType // need to fix any\n    deleteAffairCallback: (id: number) => void // need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {props.deleteAffairCallback(props.affair._id)}// need to fix\n\n    return (\n        <div style={{marginLeft: '10px'}}>\n            <div>{props.affair.name}</div>\n            <div>{props.affair.priority}</div>\n            <SuperButton onClick={deleteCallback}>X</SuperButton>\n        </div>\n    )\n}\n\nexport default Affair\n","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from './HW2'\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\n\ntype AffairsPropsType = { // need to fix any\n    data: AffairType[]\n    setFilter: (filter: FilterType) => void\n    deleteAffairCallback: (id: number) => void\n    filter: FilterType\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => { // need to fix\n        props.setFilter('all')\n    }\n    const setHigh = () => {\n        props.setFilter('high')\n    }\n    const setMiddle = () => {\n        props.setFilter('middle')\n    }\n    const setLow = () => {\n        props.setFilter('low')\n    }\n\n    return (\n        <div>\n\n            <div style={{\n                display: 'flex',\n                flexDirection: 'row',\n                alignItems: 'center',\n                textAlign: 'center',\n            }}>\n\n                {mappedAffairs}\n\n            </div>\n            <div style={{margin: '10px 0 0 10px'}}>\n                <SuperButton onClick={setAll}>All</SuperButton>\n                <SuperButton onClick={setHigh}>High</SuperButton>\n                <SuperButton onClick={setMiddle}>Middle</SuperButton>\n                <SuperButton onClick={setLow}>Low</SuperButton>\n            </div>\n        </div>\n\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n// types\nexport type AffairPriorityType = 'high' | 'middle' | 'low' // need to fix any\nexport type AffairType = { // need to fix any\n    _id: number\n    name: string\n    priority: AffairPriorityType\n}\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: AffairType[] = [ // need to fix any\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: AffairType[], filter: FilterType): AffairType[] => { // need to fix any\n    if (filter === 'all') return affairs\n/*  if (filter === 'high') return affairs.filter(a => a.priority === 'high')\n    if (filter === 'middle') return affairs.filter(a => a.priority === 'middle')\n    if (filter === 'low') return affairs.filter(a => a.priority === 'low')  */\n    return affairs.filter(a => a.priority === filter) // need to fix\n}\nexport const deleteAffair = (affairs: AffairType[], _id: number): AffairType[] => { // need to fix any\n    return affairs.filter(a => a._id !== _id) // need to fix\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<AffairType[]>(defaultAffairs) // need to fix any\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\n\n    return (\n        <div>\n            <hr/>\n            --- homework 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n                filter={filter}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${error && s.errorInput} ${className ? className : s.superInput}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ChangeEvent} from 'react'\nimport s from './Greeting.module.css'\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\nimport SuperInputText from \"../h4/common/c1-SuperInputText/SuperInputText\";\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\n    addUser: () => void // need to fix any\n    error: string // need to fix any\n    totalUsers: any // need to fix any\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\n) => {\n    const inputClass = name ? s.filled : s.error // need to fix with (?:)\n\n    return (\n        <div>\n            <SuperInputText value={name} onChange={setNameCallback} className={inputClass} placeholder=\"Type your name...\"/>\n            <span className={s.errorMsg}>{error}</span>\n            <SuperButton onClick={addUser} className={s.btn}>add</SuperButton>\n            <span>{totalUsers}</span>\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {ChangeEvent, useState} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: UserType[] // need to fix any\n    addUserCallback: (n: string) => void // need to fix any\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('') // need to fix any\n    const [error, setError] = useState<string>('') // need to fix any\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\n        setName(e.currentTarget.value) // need to fix\n    }\n    const addUser = () => {\n        if (name !== '') {\n            alert(`Hello ${name} !`)\n            addUserCallback(name)\n            setError('')\n        }\n        else {setError('Error! Please enter a valid name.')}// need to fix\n    }\n\n    const totalUsers = `Users: ${users.length}` // need to fix\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\nimport {v1} from \"uuid\";\n\n// types\nexport type UserType = {\n    _id: string // need to fix any\n    name: string // need to fix any\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<UserType[]>([]) // need to fix any\n\n    const addUserCallback = (name: string) => {\n        const newUser: UserType = {\n            _id: v1(),\n            name: name,\n        }\n        const updatedUsers: UserType[] = [newUser, ...users]// need to fix any\n        setUsers(updatedUsers) // need to fix\n        console.log(updatedUsers)\n    }\n\n    return (\n        <div>\n            <hr/>\n            --- homework 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n        // сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            --- homework 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, работает ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n                <div style={{margin:'10px 0'}}>\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n                </div>\n                {/*----------------------------------------------------*/}\n                <div>\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n                </div>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState, useEffect} from 'react'\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText'\nimport \"./SuperEditableSpan.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n\n    spanProps?: DefaultSpanPropsType // пропсы для спана\n}\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n    {\n        autoFocus, // игнорировать изменение этого пропса\n        onBlur,\n        onEnter,\n        spanProps,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const [editMode, setEditMode] = useState<boolean>(false)\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\n\n    const onEnterCallback = () => {\n        onEnter && onEnter()\n        setEditMode(false)\n    }\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n        onBlur && onBlur(e)\n        setEditMode(false)\n    }\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        onDoubleClick && onDoubleClick(e)\n        setEditMode(true)\n    }\n\n    const spanClassName = className ? `${'editable-span'} ${className}` : `${'editable-span'}`\n\n    return (\n        <>\n            {editMode\n                ? (\n                    <SuperInputText\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\n                        onBlur={onBlurCallback}\n                        onEnter={onEnterCallback}\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                    />\n                ) : (\n                    <span\n                        onDoubleClick={onDoubleClickCallBack}\n                        className={spanClassName}\n\n                        {...restSpanProps}\n                    >\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\n                        {children || restProps.value}\n                    </span>\n                )\n            }\n        </>\n    )\n}\n\nexport default SuperEditableSpan\n","// вот вам функция для сохранения объектов в память браузера\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\nexport function saveState<T>(key: string, state: T) {\n    const stateAsString = JSON.stringify(state)\n    localStorage.setItem(key, stateAsString)\n}\n\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\nexport function restoreState<T>(key: string, defaultState: T) {\n    let state = defaultState\n    const stateAsString = localStorage.getItem(key)\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\n    return state\n}\n\n// ---------------------------------------------------------------------------------------------------------------\n// пример использования:\ntype StateType = {\n    x: string\n    y: number\n}\n\n// сохраняем объект типа StateType в ячейке 'test'\nsaveState<StateType>('test', {x: 'A', y: 1})\n\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\nconst state: StateType = restoreState<StateType>('test', {x: '', y: 0})\n","import React, {useState} from 'react'\nimport SuperEditableSpan from './common/c4-SuperEditableSpan/SuperEditableSpan'\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\nimport {restoreState, saveState} from './localStorage/localStorage'\n\nfunction HW6() {\n    const [value, setValue] = useState<string>('')\n\n    const save = () => {\n        saveState<string>('editable-span-value', value)\n    }\n\n    const restore = () => {\n        setValue(restoreState<string>('editable-span-value', ''))\n    }\n\n    return (\n        <div>\n            <hr/>\n            --- homework 6\n\n            {/*should work (должно работать)*/}\n\n            <div className={'hw-6'}>\n\n                <div>\n                    <SuperEditableSpan\n                        value={value}\n                        onChangeText={setValue}\n                        spanProps={{children: value ? undefined : 'enter text...', className: 'test-span'}}/>\n                </div>\n                <SuperButton onClick={save}>save</SuperButton>\n                <SuperButton onClick={restore}>restore</SuperButton>\n\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperEditableSpan/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW6\n","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\nimport HW6 from \"../../h6/HW6\";\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            <HW6/>\n        </div>\n    )\n}\n\nexport default PreJunior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\n\nfunction PreJunior() {\n    return (\n        <div>\n            {/*<HW6/>*/}\n        </div>\n    )\n}\n\nexport default PreJunior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\n\nfunction PreJunior() {\n    return (\n        <div>\n            {/*<HW6/>*/}\n        </div>\n    )\n}\n\nexport default PreJunior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\n\nfunction Error404() {\n    return (\n        <div>\n            <div>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    )\n}\n\nexport default Error404\n","import React from 'react'\nimport {Redirect, Route, Switch} from 'react-router-dom'\nimport PreJunior from \"./pages/PreJunior\";\nimport Junior from \"./pages/Junior\";\nimport JuniorPlus from \"./pages/JuniorPlus\";\nimport Error404 from \"./pages/Error404\";\n\nexport const PATH = {\n    PRE_JUNIOR: '/pre-junior',\n    // add paths\n    JUNIOR: '/junior',\n    JUNIOR_PLUS: '/junior-plus',\n}\n\nfunction Routes() {\n    return (\n        <div>\n            {/*Switch выбирает первый подходящий роут*/}\n            <Switch>\n\n            {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\n            {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\n            <Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\n\n            <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\n            <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\n            <Route path={PATH.JUNIOR_PLUS} render={() => <JuniorPlus/>}/>\n                // add routes\n            {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n            <Route render={() => <Error404/>}/>\n            </Switch>\n        </div>\n    )\n}\n\nexport default Routes\n","import React from 'react'\nimport Header from './Header'\nimport Routes from './Routes'\nimport {HashRouter} from \"react-router-dom\";\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            <HashRouter>\n\n            <Header/>\n\n            <Routes/>\n\n            </HashRouter>\n        </div>\n    )\n}\n\nexport default HW5\n","import React from 'react'\nimport s from './App.module.css'\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>--- react homeworks:</div>\n            <HW5/>\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}